package org.library.app;

import org.library.service.LibraryService;
import org.library.model.Book;
import org.library.model.User;
import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.List;

public class LibraryApp {
    private static final Scanner scanner = new Scanner(System.in);
    private static final LibraryService libraryService = new LibraryService();

    public static void main(String[] args) {
        System.out.println("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        System.out.println("‚ïë                –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ë–ò–ë–õ–ò–û–¢–ï–ö–û–ô               ‚ïë");
        System.out.println("‚ïë                    Library Book Manager                     ‚ïë");
        System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–Ω–∏–≥ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        addSampleBooks();
        
        User currentUser = null;

        while (true) {
            printMainMenu(currentUser);
            String choice = getValidChoice();

            if (currentUser == null) {
                currentUser = handleUnauthenticatedMenu(choice);
            } else {
                handleAuthenticatedMenu(choice, currentUser);
                if (choice.equals("8")) {
                    currentUser = null;
                }
            }
            
            if (choice.equals("0")) {
                break;
            }
        }
        
        System.out.println("\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π!");
        scanner.close();
    }

    private static void addSampleBooks() {
        Book[] sampleBooks = {
            new Book("–í–æ–π–Ω–∞ –∏ –º–∏—Ä", "–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π", 1869),
            new Book("–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", "–§–µ–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π", 1866),
            new Book("–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "–ú–∏—Ö–∞–∏–ª –ë—É–ª–≥–∞–∫–æ–≤", 1967),
            new Book("1984", "–î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª", 1949),
            new Book("–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∫–∞–º–µ–Ω—å", "–î–∂. –ö. –†–æ—É–ª–∏–Ω–≥", 1997),
            new Book("–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü", "–î–∂. –†. –†. –¢–æ–ª–∫–∏–Ω", 1954),
            new Book("–ê–ª–≥–æ—Ä–∏—Ç–º—ã. –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑", "–¢–æ–º–∞—Å –ö–æ—Ä–º–µ–Ω", 1990),
            new Book("–ß–∏—Å—Ç—ã–π –∫–æ–¥", "–†–æ–±–µ—Ä—Ç –ú–∞—Ä—Ç–∏–Ω", 2008)
        };
        
        for (Book book : sampleBooks) {
            libraryService.addBook(book);
        }
    }

    private static void printMainMenu(User currentUser) {
        System.out.println("\n" + "‚ïê".repeat(60));
        if (currentUser == null) {
            System.out.println("üîê –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø");
            System.out.println("1. üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è");
            System.out.println("2. üîë –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É");
        } else {
            System.out.println("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + currentUser.getUsername());
            System.out.println("üìö –£–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ò–ë–õ–ò–û–¢–ï–ö–û–ô");
            System.out.println("1. ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É");
            System.out.println("2. üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ (–ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ)");
            System.out.println("3. üìä –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∫–Ω–∏–≥");
            System.out.println("4. üìñ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏");
            System.out.println("5. üì§ –í—ã–¥–∞—Ç—å –∫–Ω–∏–≥—É");
            System.out.println("6. üì• –í–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É");
            System.out.println("7. üéØ –¢–æ—á–Ω—ã–π –ø–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ (–±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫)");
            System.out.println("8. üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞");
        }
        System.out.println("0. ‚ùå –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã");
        System.out.println("‚ïê".repeat(60));
    }

    private static String getValidChoice() {
        System.out.print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ");
        return scanner.nextLine().trim();
    }

    private static User handleUnauthenticatedMenu(String choice) {
        switch (choice) {
            case "1":
                return handleRegistration();
            case "2":
                return handleLogin();
            case "0":
                return null;
            default:
                System.out.println("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
                return null;
        }
    }

    private static User handleRegistration() {
        System.out.println("\nüìù –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
        String username = scanner.nextLine().trim();
        
        if (username.isEmpty()) {
            System.out.println("‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return null;
        }
        
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine().trim();
        
        if (password.isEmpty()) {
            System.out.println("‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return null;
        }
        
        if (libraryService.registerUser(username, password)) {
            System.out.println("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + username + " —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.");
            return libraryService.getLoggedInUser();
        } else {
            System.out.println("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.");
            return null;
        }
    }

    private static User handleLogin() {
        System.out.println("\nüîë –í–•–û–î –í –°–ò–°–¢–ï–ú–£");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
        String username = scanner.nextLine().trim();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine().trim();
        
        if (libraryService.loginUser(username, password)) {
            User user = libraryService.getLoggedInUser();
            System.out.println("‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, " + user.getUsername() + "!");
            return user;
        } else {
            System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å.");
            return null;
        }
    }

    private static void handleAuthenticatedMenu(String choice, User currentUser) {
        switch (choice) {
            case "1":
                handleAddBook();
                break;
            case "2":
                handleSearchBooks();
                break;
            case "3":
                handleSortBooks();
                break;
            case "4":
                handleShowAllBooks();
                break;
            case "5":
                handleBorrowBook();
                break;
            case "6":
                handleReturnBook();
                break;
            case "7":
                handleBinarySearch();
                break;
            case "8":
                libraryService.logoutUser();
                System.out.println("üëã –í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.");
                break;
            case "0":
                break;
            default:
                System.out.println("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
        }
    }

    private static void handleAddBook() {
        System.out.println("\n‚ûï –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ô –ö–ù–ò–ì–ò");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ");
        String title = scanner.nextLine().trim();
        
        if (title.isEmpty()) {
            System.out.println("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return;
        }
        
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞: ");
        String author = scanner.nextLine().trim();
        
        if (author.isEmpty()) {
            System.out.println("‚ùå –ò–º—è –∞–≤—Ç–æ—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return;
        }
        
        int year = getValidYear();
        if (year == -1) return;
        
        Book newBook = new Book(title, author, year);
        libraryService.addBook(newBook);
        System.out.println("‚úÖ –ö–Ω–∏–≥–∞ \"" + title + "\" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É.");
    }

    private static int getValidYear() {
        while (true) {
            System.out.print("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è: ");
            try {
                int year = Integer.parseInt(scanner.nextLine().trim());
                if (year < 1000 || year > 2024) {
                    System.out.println("‚ùå –ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–∂–¥—É 1000 –∏ 2024.");
                    continue;
                }
                return year;
            } catch (NumberFormatException e) {
                System.out.println("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.");
            }
        }
    }

    private static void handleSearchBooks() {
        System.out.println("\nüîç –ü–û–ò–°–ö –ö–ù–ò–ì");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: ");
        String query = scanner.nextLine().trim();
        
        if (query.isEmpty()) {
            System.out.println("‚ùå –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return;
        }
        
        List<Book> found = libraryService.searchBooks(query);
        if (found.isEmpty()) {
            System.out.println("üì≠ –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
        } else {
            System.out.println("üìö –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ (" + found.size() + "):");
            for (int i = 0; i < found.size(); i++) {
                System.out.println((i + 1) + ". " + found.get(i));
            }
        }
    }

    private static void handleSortBooks() {
        System.out.println("\nüìä –°–û–†–¢–ò–†–û–í–ö–ê –ö–ù–ò–ì");
        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:");
        System.out.println("1. üìñ –ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é");
        System.out.println("2. üë§ –ü–æ –∞–≤—Ç–æ—Ä—É");
        System.out.println("3. üìÖ –ü–æ –≥–æ–¥—É –∏–∑–¥–∞–Ω–∏—è");
        
        String sortType = getValidChoice();
        if (!sortType.matches("[1-3]")) {
            System.out.println("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä –∫—Ä–∏—Ç–µ—Ä–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.");
            return;
        }
        
        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:");
        System.out.println("1. ü´ß –ü—É–∑—ã—Ä—å–∫–æ–≤–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞");
        System.out.println("2. üîÑ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–∏—è–Ω–∏–µ–º");
        System.out.println("3. üìå –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—Å—Ç–∞–≤–∫–∞–º–∏");
        System.out.println("4. ‚ö° –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ Java");
        
        String algorithmType = getValidChoice();
        if (!algorithmType.matches("[1-4]")) {
            System.out.println("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.");
            return;
        }
        
        List<Book> sorted = libraryService.sortBooks(sortType, algorithmType);
        if (sorted.isEmpty()) {
            System.out.println("üì≠ –í –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –Ω–µ—Ç –∫–Ω–∏–≥ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.");
        } else {
            System.out.println("üìö –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ (" + sorted.size() + "):");
            for (int i = 0; i < sorted.size(); i++) {
                System.out.println((i + 1) + ". " + sorted.get(i));
            }
        }
    }

    private static void handleShowAllBooks() {
        System.out.println("\nüìñ –í–°–ï –ö–ù–ò–ì–ò –í –ë–ò–ë–õ–ò–û–¢–ï–ö–ï");
        List<Book> allBooks = libraryService.getAllBooks();
        if (allBooks.isEmpty()) {
            System.out.println("üì≠ –í –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –Ω–µ—Ç –∫–Ω–∏–≥.");
        } else {
            System.out.println("üìö –í—Å–µ–≥–æ –∫–Ω–∏–≥: " + allBooks.size());
            for (int i = 0; i < allBooks.size(); i++) {
                System.out.println((i + 1) + ". " + allBooks.get(i));
            }
        }
    }

    private static void handleBorrowBook() {
        System.out.println("\nüì§ –í–´–î–ê–ß–ê –ö–ù–ò–ì–ò");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –¥–ª—è –≤—ã–¥–∞—á–∏: ");
        String title = scanner.nextLine().trim();
        
        if (title.isEmpty()) {
            System.out.println("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return;
        }
        
        boolean success = libraryService.borrowBook(title);
        if (success) {
            System.out.println("‚úÖ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞.");
        }
    }

    private static void handleReturnBook() {
        System.out.println("\nüì• –í–û–ó–í–†–ê–¢ –ö–ù–ò–ì–ò");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞: ");
        String title = scanner.nextLine().trim();
        
        if (title.isEmpty()) {
            System.out.println("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return;
        }
        
        boolean success = libraryService.returnBook(title);
        if (success) {
            System.out.println("‚úÖ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞.");
        }
    }

    private static void handleBinarySearch() {
        System.out.println("\nüéØ –¢–û–ß–ù–´–ô –ü–û–ò–°–ö –ö–ù–ò–ì–ò (–ë–ò–ù–ê–†–ù–´–ô –ü–û–ò–°–ö)");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ");
        String title = scanner.nextLine().trim();
        
        if (title.isEmpty()) {
            System.out.println("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.");
            return;
        }
        
        Book foundBook = libraryService.binarySearchBookByTitle(title);
        if (foundBook != null) {
            System.out.println("‚úÖ –ö–Ω–∏–≥–∞ –Ω–∞–π–¥–µ–Ω–∞:");
            System.out.println("   üìñ " + foundBook);
        } else {
            System.out.println("‚ùå –ö–Ω–∏–≥–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º \"" + title + "\" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
        }
    }
} 